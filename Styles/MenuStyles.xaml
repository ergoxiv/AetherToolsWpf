<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:XivToolsWpf"
					xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
					xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
					xmlns:ana="clr-namespace:XivToolsWpf.Controls"
					xmlns:converters="clr-namespace:XivToolsWpf.Converters">

	<converters:IconConverter x:Key="StringToIconConveter"/>
	<wpf:BrushRoundConverter x:Key="BrushRoundConverter"/>
	<converters:StringHasContentToVisibilityConverter x:Key="StringHasContentConverter"/>

	<Style x:Key="AnaMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{x:Null}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="6, 3, 6, 3"/>
		<Setter Property="MinWidth" Value="45"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Grid ClipToBounds="True">
						<Border x:Name="templateRoot"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"/>
						<Border x:Name="BackgroundRoot"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
								SnapsToDevicePixels="True"
								Opacity="0"/>
						<wpf:Ripple Background="Transparent"
										HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
										Focusable="False"
										Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
							<Grid Background="Transparent">
								<Grid VerticalAlignment="Center"
										  Background="Transparent"
										  Margin="{TemplateBinding Padding}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup"/>
										<ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									
									<!-- TODO -->
									<Grid x:Name="IconWrapper" Visibility="Visible" Width="40">
										<fa:IconBlock Icon="{Binding Icon}" Height="16" Width="16"/>
									</Grid>
									
									<Grid x:Name="GlyphWrapper" Visibility="Collapsed" Width="40">
										<Viewbox x:Name="GlyphPanel"
													 Width="16" Height="16"
													 HorizontalAlignment="Left"
													 Margin="0" Visibility="Collapsed" VerticalAlignment="Center"
													 FlowDirection="LeftToRight">
											<Canvas Width="24" Height="24">
												<Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" 
															  x:Name="Glyph"
															  Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" />
											</Canvas>
										</Viewbox>
									</Grid>
									<Grid Grid.Column="1">
										<ana:TextBlock Grid.Column="0" x:Name="HeaderText" Key="{TemplateBinding Header}" FontWeight="Light" FontSize="14" Margin="0, 4, 0, 4"/>
									</Grid>
									<Grid x:Name="InputGestureTextWrapper"
											  Grid.Column="2"
											  Visibility="Collapsed">
										<TextBlock Visibility="{TemplateBinding InputGestureText, Converter={StaticResource StringHasContentConverter}}"
													   Margin="16 0 0 0"
													   VerticalAlignment="Center" HorizontalAlignment="Right"
													   Text="{TemplateBinding InputGestureText}"
													   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													   Foreground="{TemplateBinding Foreground}"/>
									</Grid>
									<Grid x:Name="SubBlock"
											  Grid.Column="2"
											  Visibility="Collapsed"
											  Margin="16 0 0 0">
										<Path Width="5" Height="10"
												  Stretch="Uniform"
												  HorizontalAlignment="Right"
												  VerticalAlignment="Center"
												  Data="M0,16 L8,8 L0,0 Z"
												  Fill="{TemplateBinding Foreground}"
												  SnapsToDevicePixels="False"/>
									</Grid>
								</Grid>
							</Grid>
						</wpf:Ripple>
						<Popup x:Name="PART_Popup"
							   AllowsTransparency="True"
							   Focusable="False"
							   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
							   PopupAnimation="Slide"
							   Placement="Bottom"
							   VerticalOffset="0"
							   CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
							<Border x:Name="SubMenuBorder"
									Background="{DynamicResource MaterialDesignPaper}"
									Effect="{DynamicResource MaterialDesignShadowDepth1}"
									BorderThickness="0"
									CornerRadius="3">

								<Border Background="Transparent">
									<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
										<Grid RenderOptions.ClearTypeHint="Enabled" Margin="1, 6">
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle x:Name="OpaqueRect"
														   Fill="{Binding Background, ElementName=SubMenuBorder}"
														   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
														   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
											</Canvas>
											<ItemsPresenter x:Name="ItemsPresenter"
															KeyboardNavigation.DirectionalNavigation="Cycle"
															Grid.IsSharedSizeScope="True"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
															KeyboardNavigation.TabNavigation="Cycle"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<!--#region Roles Triggers -->
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
						</Trigger>
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="MinWidth" Value="128"/>
							<Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible"/>
						</Trigger>
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Grid.IsSharedSizeScope" Value="True"/>
							<Setter Property="Padding" Value="6 0"/>
							<Setter TargetName="templateRoot" Property="CornerRadius" Value="2"/>
							<Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
						</Trigger>
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Padding" Value="6 0"/>
							<Setter TargetName="templateRoot" Property="CornerRadius" Value="2"/>
							<Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Role" Value="TopLevelHeader"/>
								<Condition Property="IsSubmenuOpen" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<!--#endregion-->

						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
							<Setter TargetName="SubMenuBorder" Property="Margin" Value="5"/>
						</Trigger>

						<Trigger Property="IsSuspendingPopupAnimation" Value="True">
							<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
						</Trigger>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsCheckable" Value="True">
							<Setter Property="Visibility" TargetName="GlyphWrapper" Value="Visible"/>
							<Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.13"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value=".56"/>
						</Trigger>
						<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ButtonMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource AnaMenuItem}">
		<Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
		<Setter Property="Padding" Value="6,0,6,0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="Height" Value="32"/>

		<Setter Property="Border.CornerRadius" Value="4"/>
		<Setter Property="Popup.Placement" Value="Top"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Grid ClipToBounds="True" Cursor="Hand">
						<Border x:Name="BackgroundRoot"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"
								CornerRadius="{TemplateBinding Border.CornerRadius}"/>

						<wpf:Ripple Background="Transparent"
										HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
										Focusable="False"
										Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
							<Grid Height="{TemplateBinding Height}" Background="Transparent">

								<Line x:Name="Line" Visibility="Collapsed" Y1="0" Y2="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Stretch="Fill" Margin="0, 3, 0, 3" 
									  Stroke="{DynamicResource MaterialDesignCardBackground}"/>

								<Grid VerticalAlignment="Center"
										  Background="Transparent"
										  Margin="{TemplateBinding Padding}">

									<Grid Grid.Column="1">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<ana:IconBlock x:Name="IconArea" Grid.Column="0" Icon="{TemplateBinding Icon, Converter={StaticResource StringToIconConveter}}"
													  Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"
													  FontSize="12"/>

										<ana:TextBlock Grid.Column="1" x:Name="HeaderText" Key="{TemplateBinding Header}" Foreground="Black" FontWeight="Light" FontSize="14" Margin="4, 2, 0, 2"/>
										<fa:IconBlock Grid.Column="3" x:Name="Chevron" Icon="ChevronDown" Foreground="Black" FontSize="14" Margin="-2, 2, 2, 2"/>
									</Grid>
								</Grid>
							</Grid>
						</wpf:Ripple>

						<Popup x:Name="PART_Popup"
							   AllowsTransparency="True"
							   Focusable="False"
							   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
							   PopupAnimation="Slide"
							   Placement="{TemplateBinding Popup.Placement}"
							   VerticalOffset="0"
							   HorizontalOffset="{TemplateBinding Popup.HorizontalOffset}"
							   CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
							
							<Border x:Name="SubMenuBorder"
									Background="{DynamicResource MaterialDesignPaper}"
									Effect="{DynamicResource MaterialDesignShadowDepth1}"
									BorderThickness="0"
									CornerRadius="6">

								<Border Background="Transparent" Margin="3">
									<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
										<Grid RenderOptions.ClearTypeHint="Enabled" Margin="1, 6">
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle x:Name="OpaqueRect"
														   Fill="{Binding Background, ElementName=SubMenuBorder}"
														   Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
														   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
											</Canvas>
											<ItemsPresenter x:Name="ItemsPresenter"
															KeyboardNavigation.DirectionalNavigation="Cycle"
															Grid.IsSharedSizeScope="True"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
															KeyboardNavigation.TabNavigation="Cycle"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<!--#region Roles Triggers -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Role" Value="TopLevelHeader"/>
								<Condition Property="IsSubmenuOpen" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<!--#endregion-->
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Chevron" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
							<Setter TargetName="SubMenuBorder" Property="Margin" Value="5"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="True">
							<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value=".56"/>
						</Trigger>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter TargetName="IconArea" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
						</Trigger>

						<Trigger Property="HorizontalContentAlignment" Value="Left">
							<Setter TargetName="Line" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style x:Key="ButtonMenuItemLeft" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ButtonMenuItem}">
		<Setter Property="Border.CornerRadius" Value="4, 0, 0, 4"/>
		<Setter Property="Margin" Value="2,0,0,0"/>
	</Style>

	<Style x:Key="ButtonMenuItemRight" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ButtonMenuItem}">
		<Setter Property="Border.CornerRadius" Value="0, 4, 4, 0"/>
		<Setter Property="Margin" Value="0,0,2,0"/>
		<Setter Property="Popup.HorizontalOffset" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>

	<Style x:Key="AnaMenu" TargetType="{x:Type Menu}" BasedOn="{x:Null}">
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
	</Style>

</ResourceDictionary>